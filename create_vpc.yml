---
- name: Create Virtual Private Network on AWS
  hosts: localhost

  vars_files:
    - external_vars.yml

  tasks:
  - name: Query vpc
    amazon.aws.ec2_vpc_net_info:
      # aws_access_key: "{{ access_key }}"
      # aws_secret_access_key: "{{ aws_secret_access_key }}"
      region: "{{ aws_region }}"
      filters:
        "tag:Name": "{{ VPC }}"
    register: existing_vpc
    tags: vpc, igw

  - name: VPC
    ansible.builtin.debug:
      msg:
        - "existing_vpc : {{ existing_vpc }}"
    when: existing_vpc is defined and existing_vpc.vpcs | length > 0
    tags: vpc

  - name: Set vpc_id when it already exists
    set_fact:
      vpc_id: "{{ existing_vpc.vpcs[0].vpc_id }}"
    when: existing_vpc is defined and existing_vpc.vpcs | length > 0
    tags: vpc

  - name: Create vpc
    amazon.aws.ec2_vpc_net:
      name: "{{ VPC }}"
      # aws_access_key: "{{ access_key }}"
      # aws_secret_access_key: "{{ aws_secret_access_key }}"
      cidr_block: "{{ CIDR }}"
      region: "{{ aws_region }}"
      tenancy: default
    register: new_vpc
    when: vpc_id is not defined
    tags: vpc

  - name: Set vpcid after create new vpc
    set_fact:
      vpc_id: "{{ new_vpc.vpc.id }}"
    when: new_vpc is defined and vpc_id is not defined
    tags: vpc

  - name: Query Subnet
    amazon.aws.ec2_vpc_subnet_info:
      # aws_access_key: "{{ access_key }}"
      # aws_secret_access_key: "{{ aws_secret_access_key }}"
      region: "{{ aws_region }}"
      filters:
        vpc-id: "{{ vpc_id }}"
    register: vpc_subnet
    when: vpc_id is defined
    tags: subnet

  - name: Show Subnet
    ansible.builtin.debug:
      msg:
        - "Subnet : {{ vpc_subnet }}"
    when: vpc_subnet is defined
    tags: subnet

  - name: Create subnet for the VPC
    amazon.aws.ec2_vpc_subnet:
      # aws_access_key: "{{ access_key }}"
      # aws_secret_access_key: "{{ aws_secret_access_key }}"
      region: "{{ aws_region }}"
      state: present
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ CIDR }}"
      tags:
        Name: "{{ aws_vpc_subnet_name }}"
    register: vpc_subnet
    when: vpc_id is defined and vpc_subnet.subnets | length == 0
    tags: subnet

  - name: Show Subnet
    ansible.builtin.debug:
      msg:
        - "Subnet : {{ vpc_subnet }}"
    when: vpc_subnet is defined
    tags: subnet

  - name: Query internet gateway
    amazon.aws.ec2_vpc_igw_info:
      # aws_access_key: "{{ access_key }}"
      # aws_secret_access_key: "{{ aws_secret_access_key }}"
      region: "{{ aws_region }}"
      filters:
        "tag:Name": "{{ InternetGateway }}"
    register: existing_igw
    tags: igw

  - name: Existing  Internet Gateway
    ansible.builtin.debug:
      msg:
        - "IGW : {{ existing_igw }}"
    when: existing_igw is defined
    tags: igw

  - name: Set igw_id after query
    set_fact:
      igw_id: "{{ existing_igw.internet_gateways[0].internet_gateway_id }}"
    when: existing_igw is defined and existing_igw.internet_gateways | length > 0
    tags: igw

  - name: Create internet gateway
    amazon.aws.ec2_vpc_igw:
      # aws_access_key: "{{ access_key }}"
      # aws_secret_access_key: "{{ aws_secret_access_key }}"
      region: "{{ aws_region }}"
      vpc_id: "{{ vpc_id }}"
      state: present
      tags:
        Name: "{{ InternetGateway}}"
    register: new_igw
    when: igw_id is not defined
    tags: igw

  - name: NEW Internet Gateway
    ansible.builtin.debug:
      msg:
        - "IGW : {{ new_igw }}"
    when: igw_id is not defined and new_igw is defined
    tags: igw

  - name: Set igw_id after create
    set_fact:
      igw_id: "{{ new_igw.gateway_id }}"
    when: igw_id is not defined and new_igw is defined
    tags: igw

  - name: Internet Gateway
    ansible.builtin.debug:
      msg:
        - "igw_id : {{ igw_id }}"
    when: igw_id is defined
    tags: igw

  - name: Gather information about any VPC route table within VPC with ID {{ vpc_id }}
    amazon.aws.ec2_vpc_route_table_info:
      # aws_access_key: "{{ access_key }}"
      # aws_secret_access_key: "{{ aws_secret_access_key }}"
      region: "{{ aws_region }}"
      filters:
        vpc-id: "{{ vpc_id }}"
    register: vpc_route_table
    tags: vpc

  - name: Set route_table_id after Get VPC Route Table
    set_fact:
      route_table_id: "{{ vpc_route_table.route_tables[0].route_table_id }}"
    when: vpc_route_table is defined and vpc_route_table.route_tables | length > 0 
    tags: vpc

  - name: VPC Route Table ID
    ansible.builtin.debug:
      msg:
        - "route_table_id : {{ route_table_id }}"
    when: route_table_id is defined
    tags: vpc

  - name: Set up public subnet route table
    amazon.aws.ec2_vpc_route_table:
      # aws_access_key: "{{ access_key }}"
      # aws_secret_access_key: "{{ aws_secret_access_key }}"
      vpc_id: "{{ vpc_id }}"
      region: "{{ aws_region }}"
      lookup: "id"
      route_table_id: "{{ route_table_id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw_id }}"
    register: public_route_table
    tags: public_route

  - name: Public Subnet Route Table
    ansible.builtin.debug:
      msg:
        - "public_route_table : {{ public_route_table }}"
    when: public_route_table is defined
    tags: debug
